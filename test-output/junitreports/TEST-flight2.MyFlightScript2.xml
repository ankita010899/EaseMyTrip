<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="15" hostname="LAPTOP-6BLMBPNU" name="flight2.MyFlightScript2" tests="31" failures="0" timestamp="2021-08-16T16:24:35 IST" time="348.775" errors="1">
  <testcase name="beforeTest" time="46.885" classname="flight2.MyFlightScript2">
    <error type="org.openqa.selenium.WebDriverException" message="Process unexpectedly closed with status 0
Build info: version: &#039;3.141.59&#039;, revision: &#039;e82be7d358&#039;, time: &#039;2018-11-14T08:17:03&#039;
System info: host: &#039;LAPTOP-6BLMBPNU&#039;, ip: &#039;192.168.0.100&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_291&#039;
Driver info: driver.version: FirefoxDriver
remote stacktrace: ">
      <![CDATA[org.openqa.selenium.WebDriverException: Process unexpectedly closed with status 0
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-6BLMBPNU', ip: '192.168.0.100', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: driver.version: FirefoxDriver
remote stacktrace: 
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source)
at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)
at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
at java.util.stream.ReferencePipeline.findFirst(Unknown Source)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:147)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:125)
at flight2.Base.beforeTest(Base.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:623)
at org.testng.TestRunner.beforeRun(TestRunner.java:613)
at org.testng.TestRunner.run(TestRunner.java:584)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:41)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:443)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:67)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
    </error>
  </testcase> <!-- beforeTest -->
  <testcase name="checkRoundtrip" time="17.571" classname="flight2.MyFlightScript2"/>
  <testcase name="checkRoundtrip" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- checkRoundtrip -->
  <testcase name="aPropLoadMethod" time="17.166" classname="flight2.MyFlightScript2"/>
  <testcase name="aPropLoadMethod" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- aPropLoadMethod -->
  <testcase name="checkOneway" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- checkOneway -->
  <testcase name="checkOneway" time="19.472" classname="flight2.MyFlightScript2"/>
  <testcase name="checkMulticity" time="20.567" classname="flight2.MyFlightScript2"/>
  <testcase name="checkMulticity" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- checkMulticity -->
  <testcase name="webCheckIn" time="37.739" classname="flight2.MyFlightScript2"/>
  <testcase name="webCheckIn" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- webCheckIn -->
  <testcase name="CheckDefence" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- CheckDefence -->
  <testcase name="CheckDefence" time="16.013" classname="flight2.MyFlightScript2"/>
  <testcase name="checkFlightDetails" time="15.125" classname="flight2.MyFlightScript2"/>
  <testcase name="checkFlightDetails" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- checkFlightDetails -->
  <testcase name="reviewValidEmail" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- reviewValidEmail -->
  <testcase name="reviewValidEmail" time="21.488" classname="flight2.MyFlightScript2"/>
  <testcase name="reviewInvalidEmail" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- reviewInvalidEmail -->
  <testcase name="reviewInvalidEmail" time="18.539" classname="flight2.MyFlightScript2"/>
  <testcase name="reviewdInsuranceYes" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- reviewdInsuranceYes -->
  <testcase name="reviewdInsuranceYes" time="19.630" classname="flight2.MyFlightScript2"/>
  <testcase name="reviewdInsuranceNo" time="22.425" classname="flight2.MyFlightScript2"/>
  <testcase name="reviewdInsuranceNo" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- reviewdInsuranceNo -->
  <testcase name="travellerSection1" time="22.351" classname="flight2.MyFlightScript2"/>
  <testcase name="travellerSection1" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- travellerSection1 -->
  <testcase name="travellerSection2" time="22.053" classname="flight2.MyFlightScript2"/>
  <testcase name="travellerSection2" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- travellerSection2 -->
  <testcase name="checkSameLocation" time="12.932" classname="flight2.MyFlightScript2"/>
  <testcase name="checkSameLocation" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- checkSameLocation -->
  <testcase name="maxTravelersCheck" time="0.000" classname="flight2.MyFlightScript2">
    <skipped/>
  </testcase> <!-- maxTravelersCheck -->
  <testcase name="maxTravelersCheck" time="18.819" classname="flight2.MyFlightScript2"/>
</testsuite> <!-- flight2.MyFlightScript2 -->
